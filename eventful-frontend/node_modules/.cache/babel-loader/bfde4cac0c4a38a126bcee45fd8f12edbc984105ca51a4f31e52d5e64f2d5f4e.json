{"ast":null,"code":"// src/services/apiService.js\nconst API_URL = 'http://localhost:5000/api'; // Adjust if necessary\n\nexport const apiLogin = async (email, password) => {\n  try {\n    const response = await fetch(`${API_URL}/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      return {\n        success: true,\n        token: data.token\n      };\n    } else {\n      return {\n        success: false,\n        message: data.msg || 'Login failed'\n      };\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: 'Network error'\n    };\n  }\n};\nexport const apiSignup = async (name, email, password, role) => {\n  try {\n    const response = await fetch(`${API_URL}/auth/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password,\n        role\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      return {\n        success: true,\n        token: data.token\n      };\n    } else {\n      return {\n        success: false,\n        message: data.msg || 'Signup failed'\n      };\n    }\n  } catch (error) {\n    return {\n      success: false,\n      message: 'Network error'\n    };\n  }\n};","map":{"version":3,"names":["API_URL","apiLogin","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","success","token","message","msg","error","apiSignup","name","role"],"sources":["C:/Users/fsindamb/OneDrive/Desktop/Diane_stuffs/Capstone Altschool Project/eventful-frontend/src/services/apiService.js"],"sourcesContent":["// src/services/apiService.js\r\nconst API_URL = 'http://localhost:5000/api'; // Adjust if necessary\r\n\r\nexport const apiLogin = async (email, password) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      return { success: true, token: data.token };\r\n    } else {\r\n      return { success: false, message: data.msg || 'Login failed' };\r\n    }\r\n  } catch (error) {\r\n    return { success: false, message: 'Network error' };\r\n  }\r\n};\r\n\r\nexport const apiSignup = async (name, email, password, role) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/auth/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name, email, password, role }),\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      return { success: true, token: data.token };\r\n    } else {\r\n      return { success: false, message: data.msg || 'Signup failed' };\r\n    }\r\n  } catch (error) {\r\n    return { success: false, message: 'Network error' };\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAE7C,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;EACjD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,aAAa,EAAE;MACpDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACf,OAAO;QAAEC,OAAO,EAAE,IAAI;QAAEC,KAAK,EAAEJ,IAAI,CAACI;MAAM,CAAC;IAC7C,CAAC,MAAM;MACL,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEE,OAAO,EAAEL,IAAI,CAACM,GAAG,IAAI;MAAe,CAAC;IAChE;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO;MAAEJ,OAAO,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAgB,CAAC;EACrD;AACF,CAAC;AAED,OAAO,MAAMG,SAAS,GAAG,MAAAA,CAAOC,IAAI,EAAElB,KAAK,EAAEC,QAAQ,EAAEkB,IAAI,KAAK;EAC9D,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,OAAO,gBAAgB,EAAE;MACvDM,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEU,IAAI;QAAElB,KAAK;QAAEC,QAAQ;QAAEkB;MAAK,CAAC;IACtD,CAAC,CAAC;IACF,MAAMV,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAIR,QAAQ,CAACS,EAAE,EAAE;MACf,OAAO;QAAEC,OAAO,EAAE,IAAI;QAAEC,KAAK,EAAEJ,IAAI,CAACI;MAAM,CAAC;IAC7C,CAAC,MAAM;MACL,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEE,OAAO,EAAEL,IAAI,CAACM,GAAG,IAAI;MAAgB,CAAC;IACjE;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,OAAO;MAAEJ,OAAO,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAgB,CAAC;EACrD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}