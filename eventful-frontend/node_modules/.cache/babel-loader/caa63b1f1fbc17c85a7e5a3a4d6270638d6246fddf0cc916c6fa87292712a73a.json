{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fsindamb\\\\OneDrive\\\\Desktop\\\\Diane_stuffs\\\\Capstone Altschool Project\\\\eventful-frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Create a context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authToken, setAuthToken] = useState(null);\n\n  // This effect runs when the component mounts, for example, to fetch the token from local storage or an API.\n  useEffect(() => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      setAuthToken(token);\n    }\n  }, []);\n\n  // Function to log in (set token)\n  const login = token => {\n    setAuthToken(token);\n    localStorage.setItem('authToken', token);\n  };\n\n  // Function to log out (clear token)\n  const logout = () => {\n    setAuthToken(null);\n    localStorage.removeItem('authToken');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authToken,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"mu4KJLv1NxEdz+DaxPukBhbUto8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authToken","setAuthToken","token","localStorage","getItem","login","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fsindamb/OneDrive/Desktop/Diane_stuffs/Capstone Altschool Project/eventful-frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Create a context\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authToken, setAuthToken] = useState(null);\r\n\r\n  // This effect runs when the component mounts, for example, to fetch the token from local storage or an API.\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('authToken');\r\n    if (token) {\r\n      setAuthToken(token);\r\n    }\r\n  }, []);\r\n\r\n  // Function to log in (set token)\r\n  const login = (token) => {\r\n    setAuthToken(token);\r\n    localStorage.setItem('authToken', token);\r\n  };\r\n\r\n  // Function to log out (clear token)\r\n  const logout = () => {\r\n    setAuthToken(null);\r\n    localStorage.removeItem('authToken');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authToken, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAC/C,IAAIF,KAAK,EAAE;MACTD,YAAY,CAACC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,KAAK,GAAIH,KAAK,IAAK;IACvBD,YAAY,CAACC,KAAK,CAAC;IACnBC,YAAY,CAACG,OAAO,CAAC,WAAW,EAAEJ,KAAK,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACnBN,YAAY,CAAC,IAAI,CAAC;IAClBE,YAAY,CAACK,UAAU,CAAC,WAAW,CAAC;EACtC,CAAC;EAED,oBACEb,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,SAAS;MAAEK,KAAK;MAAEE;IAAO,CAAE;IAAAT,QAAA,EACvDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACf,EAAA,CA5BWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}