{"ast":null,"code":"// src/services/apiService.js\nconst API_URL='http://localhost:5000/api';// Adjust if necessary\nexport const apiLogin=async(email,password)=>{try{const response=await fetch(`${API_URL}/auth/login`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});const data=await response.json();if(response.ok){return{success:true,token:data.token};}else{return{success:false,message:data.msg||'Login failed'};}}catch(error){return{success:false,message:'Network error'};}};export const apiSignup=async(name,email,password)=>{try{const response=await fetch(`${API_URL}/auth/register`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({name,email,password})});const data=await response.json();if(response.ok){return{success:true,token:data.token};}else{return{success:false,message:data.msg||'Signup failed'};}}catch(error){return{success:false,message:'Network error'};}};","map":{"version":3,"names":["API_URL","apiLogin","email","password","response","fetch","method","headers","body","JSON","stringify","data","json","ok","success","token","message","msg","error","apiSignup","name"],"sources":["C:/Users/fsindamb/OneDrive/Desktop/Diane_stuffs/Capstone Altschool Project/eventful-frontend/src/services/apiService.js"],"sourcesContent":["// src/services/apiService.js\r\nconst API_URL = 'http://localhost:5000/api'; // Adjust if necessary\r\n\r\nexport const apiLogin = async (email, password) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/auth/login`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      return { success: true, token: data.token };\r\n    } else {\r\n      return { success: false, message: data.msg || 'Login failed' };\r\n    }\r\n  } catch (error) {\r\n    return { success: false, message: 'Network error' };\r\n  }\r\n};\r\n\r\nexport const apiSignup = async (name, email, password) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/auth/register`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name, email, password }),\r\n    });\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      return { success: true, token: data.token };\r\n    } else {\r\n      return { success: false, message: data.msg || 'Signup failed' };\r\n    }\r\n  } catch (error) {\r\n    return { success: false, message: 'Network error' };\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,KAAM,CAAAA,OAAO,CAAG,2BAA2B,CAAE;AAE7C,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACjD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,OAAO,aAAa,CAAE,CACpDM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAER,KAAK,CAAEC,QAAS,CAAC,CAC1C,CAAC,CAAC,CACF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClC,GAAIR,QAAQ,CAACS,EAAE,CAAE,CACf,MAAO,CAAEC,OAAO,CAAE,IAAI,CAAEC,KAAK,CAAEJ,IAAI,CAACI,KAAM,CAAC,CAC7C,CAAC,IAAM,CACL,MAAO,CAAED,OAAO,CAAE,KAAK,CAAEE,OAAO,CAAEL,IAAI,CAACM,GAAG,EAAI,cAAe,CAAC,CAChE,CACF,CAAE,MAAOC,KAAK,CAAE,CACd,MAAO,CAAEJ,OAAO,CAAE,KAAK,CAAEE,OAAO,CAAE,eAAgB,CAAC,CACrD,CACF,CAAC,CAED,MAAO,MAAM,CAAAG,SAAS,CAAG,KAAAA,CAAOC,IAAI,CAAElB,KAAK,CAAEC,QAAQ,GAAK,CACxD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGL,OAAO,gBAAgB,CAAE,CACvDM,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEU,IAAI,CAAElB,KAAK,CAAEC,QAAS,CAAC,CAChD,CAAC,CAAC,CACF,KAAM,CAAAQ,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClC,GAAIR,QAAQ,CAACS,EAAE,CAAE,CACf,MAAO,CAAEC,OAAO,CAAE,IAAI,CAAEC,KAAK,CAAEJ,IAAI,CAACI,KAAM,CAAC,CAC7C,CAAC,IAAM,CACL,MAAO,CAAED,OAAO,CAAE,KAAK,CAAEE,OAAO,CAAEL,IAAI,CAACM,GAAG,EAAI,eAAgB,CAAC,CACjE,CACF,CAAE,MAAOC,KAAK,CAAE,CACd,MAAO,CAAEJ,OAAO,CAAE,KAAK,CAAEE,OAAO,CAAE,eAAgB,CAAC,CACrD,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}