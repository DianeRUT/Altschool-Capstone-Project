{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fsindamb\\\\OneDrive\\\\Desktop\\\\Diane_stuffs\\\\Capstone Altschool Project\\\\eventful-frontend\\\\src\\\\components\\\\EventList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventList = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/events/all');\n        if (!response.ok) {\n          throw new Error('Failed to fetch events');\n        }\n        const data = await response.json();\n        setEvents(data);\n      } catch (error) {\n        console.error('Error fetching events:', error);\n      }\n    };\n    fetchEvents();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Events\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: events.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: event.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: event.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: new Date(event.date).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: event.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)]\n      }, event._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(EventList, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = EventList;\nexport default EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EventList","_s","events","setEvents","fetchEvents","response","fetch","ok","Error","data","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","event","title","description","Date","date","toLocaleString","location","_id","_c","$RefreshReg$"],"sources":["C:/Users/fsindamb/OneDrive/Desktop/Diane_stuffs/Capstone Altschool Project/eventful-frontend/src/components/EventList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst EventList = () => {\r\n    const [events, setEvents] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/events/all');\r\n                if (!response.ok) {\r\n                    throw new Error('Failed to fetch events');\r\n                }\r\n                const data = await response.json();\r\n                setEvents(data);\r\n            } catch (error) {\r\n                console.error('Error fetching events:', error);\r\n            }\r\n        };\r\n\r\n        fetchEvents();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>All Events</h2>\r\n            <ul>\r\n                {events.map(event => (\r\n                    <li key={event._id}>\r\n                        <h3>{event.title}</h3>\r\n                        <p>{event.description}</p>\r\n                        <p>{new Date(event.date).toLocaleString()}</p>\r\n                        <p>{event.location}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;QACpE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;QAC7C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCP,SAAS,CAACM,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ,CAAC;IAEDP,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBlB,OAAA;MAAAc,QAAA,EACKX,MAAM,CAACgB,GAAG,CAACC,KAAK,iBACbpB,OAAA;QAAAc,QAAA,gBACId,OAAA;UAAAc,QAAA,EAAKM,KAAK,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBlB,OAAA;UAAAc,QAAA,EAAIM,KAAK,CAACE;QAAW;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BlB,OAAA;UAAAc,QAAA,EAAI,IAAIS,IAAI,CAACH,KAAK,CAACI,IAAI,CAAC,CAACC,cAAc,CAAC;QAAC;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9ClB,OAAA;UAAAc,QAAA,EAAIM,KAAK,CAACM;QAAQ;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAJlBE,KAAK,CAACO,GAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKd,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAAChB,EAAA,CAnCID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}